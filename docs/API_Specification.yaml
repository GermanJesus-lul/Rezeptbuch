openapi: 3.0.0
info:
  title: Rezeptbuch API
  description: >
    The Rezeptbuch API provides endpoints to manage recipes, including listing, creating, downloading and updating recipes. 
    It also supports features such as filtering recipes, managing categories, and syncing data between clients and the server.
  version: 1.0.0
tags:
  - name: recipes
    description: Endpoints related to managing recipes
  - name: categories
    description: Endpoints related to managing recipe categories

paths:
  /list:
    get:
      tags:
        - recipes
      summary: List recipes
      description: Multiple filter/sort options can be specified in the parameters
      parameters:
        - name: offset
          in: query
          description: How many recipes should be skipped
          required: false
          schema:
            type: integer
            default: 0
        - name: count
          in: query
          description: How many recipes should be returned
          required: true
          schema:
            type: integer
        - name: order_by
          in: query
          description: What the recipes should be ordered by
          required: false
          schema:
            type: string
            default: title
            enum:
              - title
              - cooking_time
        - name: order
          in: query
          description: What direction the order should have
          required: false
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: categories
          in: query
          description: Which categories should be included (if none are specified dont filter by categories)
          required: false
          schema:
            type: array
            items: 
              type: string
      responses:
        '200':
          description: successful operation
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  recipes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recipe'
        '400':
          description: Bad Request (e.g. value for order_by not title or cooking_time)
          
  /upload:
    post:
      tags:
        - recipes
      summary: Upload an XML file
      description: Endpoint to upload an XML file containing recipe data.
      requestBody:
        content: 
          application/xml:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful upload
        '400':
          description: Bad request, e.g., malformed XML or validation error
  
  /update:
    post:
      tags:
        - recipes
      summary: Upload an XML file
      description: Endpoint to upload an XML file containing changed recipe data
      parameters:
        - name: previous_hash
          in: query
          description: the hash under which the recipe was known before changing it
          required: true
          schema:
            type: string
          example: 36ec9bdaee807f2ae07f9f43c851ace40bad1e659f04f831704abe9d2efcf2df
      requestBody:
        content: 
          application/xml:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful update
        '400':
          description: Bad request, e.g., malformed XML, validation error or no recipe to be updated found


components:
  schemas:
    Recipe:
      type: object
      properties:
        offset:
          type: integer
          format: int64
          example: 30
        count:
          type: integer
          format: int64
          example: 15
